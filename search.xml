<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>robomaster备赛准备（持续更新）</title>
    <url>/2020/04/08/beisai/</url>
    <content><![CDATA[<blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">进度  第一周—→第二周-→第三周 </span><br></pre></td></tr></table></figure>
</blockquote>
<h1 id="机械："><a href="#机械：" class="headerlink" title="机械："></a>机械：</h1><h2 id="第三周："><a href="#第三周：" class="headerlink" title="第三周："></a>第三周：</h2><h2 id="第二周："><a href="#第二周：" class="headerlink" title="第二周："></a>第二周：</h2><p>1、熟悉软件草图和特征命令，尝试用尽可能多的方法 画出一个水杯 （不用杯把手）  最后报出使用方法的数量和简要步骤，水杯尺寸不限。  2、了解零件间的配合关系，运用两个零件（分为把手和杯体），配合出一个带把手的杯子</p>
<h2 id="第一周："><a href="#第一周：" class="headerlink" title="第一周："></a>第一周：</h2><p>使用软件solid works ， 版本最好18或以上版本，学习可以参考b站学习视频  ，后期还要在论坛上下载开源的机械图，熟悉机器人的功能，和结构。   任务： 安装好软件，下周交  边长10mm的正方体、底面直径10mm高10mm的圆柱体、底面直径10mm高10mm的圆锥。  </p>
<p> 3/22 ——昨天已经有人把图片发给我了，完成的不错</p>
<p>3/23—— <a href="https://github.com/sanshihilliard/learngit/blob/master/一体铝条框.SLDPRT&gt;" target="_blank" rel="noopener">https://github.com/sanshihilliard/learngit/blob/master/一体铝条框.SLDPRT&gt;</a>    点击链接下载  建议直接用电脑下载  ，然后看看能不能把这个复现一下  ，PS：没做完 圆锥、圆柱、正方体的继续做（最好3/29号前完成，完成后给我拍张照片就行）。</p>
<p>3/26—— 空闲时间注册robomaster论坛账户（我发现没有账户有的东西看不全），论坛技术交流栏 → 机械设计    看一看别的学校开源图纸。</p>
<p>​    </p>
<h1 id="视觉："><a href="#视觉：" class="headerlink" title="视觉："></a><strong>视觉：</strong></h1><h2 id="第三周：-1"><a href="#第三周：-1" class="headerlink" title="第三周："></a>第三周：</h2><h2 id="第二周：-1"><a href="#第二周：-1" class="headerlink" title="第二周："></a>第二周：</h2><p>  写出一个程序打开指定目录下的图片，并将其转化为灰度图片</p>
<h2 id="第一周：-1"><a href="#第一周：-1" class="headerlink" title="第一周："></a>第一周：</h2><p>想参加视觉组的人，这周需要安装visual studio软件，并且配置好opencv，这个配置方法网上有教程，可以照着教程来完成。</p>
<h1 id="电控："><a href="#电控：" class="headerlink" title="电控："></a><strong>电控：</strong></h1><h2 id="第二周：-2"><a href="#第二周：-2" class="headerlink" title="第二周："></a>第二周：</h2><p> 电控任务：看GPIO工作原理完成跑马灯实验库函数版以及跑马灯位操作</p>
<h2 id="第一周：-2"><a href="#第一周：-2" class="headerlink" title="第一周："></a>第一周：</h2><p>任务：安装keil  配好环境 学会新建工程        关于32板的学习： <a href="www.openedv.com">正点原子论坛</a>     <a href="https://space.bilibili.com/394620890?share_medium=android&share_source=copy_link&bbid=XY9612D9221B69E9C66295DA90C1583FD5D05&ts=1584782208083" target="_blank" rel="noopener">正点原子在B站</a>       </p>
<h1 id="宣传："><a href="#宣传：" class="headerlink" title="宣传："></a><strong>宣传：</strong></h1><h2 id="第二周：-3"><a href="#第二周：-3" class="headerlink" title="第二周："></a>第二周：</h2><p>1、推送 ：跟进实验室其他组的学习，进行推送  一篇推送。  比如学到哪里 。遇到什么困难，怎样解决的、想法和创意  （这个就需要你们自己去找别的组的同学沟通了，获取推送的信息。最少挑选一个组。这个是考虑到，我们是一个团队，相互之间应该有个交流和对彼此工作的了解)   任务下周还会有，变为两篇</p>
<p>2、ps     下面两张图  P到一起。 （长按图片保存）</p>
<p><img src="https://user-images.githubusercontent.com/49864898/77852698-a5829e00-7212-11ea-82e3-d38e3ee96372.jpg" alt=""></p>
<p><img src="https://user-images.githubusercontent.com/49864898/77852782-0a3df880-7213-11ea-9ea7-955264a2f199.jpg" alt=""></p>
<h2 id="第一周：-3"><a href="#第一周：-3" class="headerlink" title="第一周："></a>第一周：</h2><p>宣传工作 上篇有介绍    <a href="https://g-ncp.github.io/2020/03/16/602learn/">602learn</a>  。 推送编辑器 我用的是秀米 <a href="https://xiumi.us" target="_blank" rel="noopener">https://xiumi.us</a>    还有别的你们可以自主选择。 </p>
<p>我自己注册了一个公众号，你们可以拿去练练手 ，  邮箱：<a href="mailto:3351623274@qq.com">3351623274@qq.com</a>    密码：602宣传   网上搜微信公众平台登录就可以了（你们如果想拿它练手的话，在微信群里告诉我（秦岭以北），我把你们加到运营者里）     王岩学姐对你们的要求是学习ps，一周两篇微信推送、 一周发原图和ps后的图片</p>
<p>3/22 —— 补充  ps内容自定义  ，就是想让你们学点东西。  推送 的话，自己想题材 （看看别的学校的战队公众号或者追一下现在的热点什么的），做出来，可以先保存  （保存之后在微信素材库就可以找到）   下周择优发布到  黑大雄狮</p>
<p> 很高兴实验室能有这么多人对这个比赛感兴趣，对这个比赛我就不做介绍了，之前也讲过。我来说一下现状，首先这个比赛在黑龙江大学进行过几届，由我们602实验室 组织队伍参与，<strong>队名Simba</strong>     在这届（2020年）我们组好了队伍，准备参加两项单项赛。  并且决定把你们组织起来，培养你们参加比赛的技术，为下届比赛做准备。 在这里说明一下安排         </p>
<blockquote>
<p><a href="https://bbs.robomaster.com/" target="_blank" rel="noopener">https://bbs.robomaster.com/</a>    这个链接是官方rm论坛   组委会还有一些学校的战队会发帖子，关于比赛规则、还有些机械、电控、视觉等开源资料，学校举办校内赛的消息  。 <a href="https://www.robomaster.com/zh-CN" target="_blank" rel="noopener">https://www.robomaster.com/zh-CN</a>  这个链接是RM官网链接      </p>
</blockquote>
<table>
<thead>
<tr>
<th align="center">组别/成员</th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td align="center">电控</td>
<td>陈峻琦</td>
<td>刘宏源</td>
<td>杨中凯</td>
<td>宋博</td>
<td>何明亮</td>
<td>张炎</td>
<td>胡展滔</td>
<td>赵豪杰</td>
<td>任一飞</td>
<td>9人</td>
</tr>
<tr>
<td align="center">机械</td>
<td>杨毅</td>
<td>蒋庚珊</td>
<td>臧奕博</td>
<td>赵彦博</td>
<td>魏世娜</td>
<td>刘友睿</td>
<td>佟昕鹏</td>
<td>郭润桐</td>
<td></td>
<td>8人</td>
</tr>
<tr>
<td align="center">宣传</td>
<td>王成玉</td>
<td>郭蕊琪</td>
<td>植永海</td>
<td>孙洋</td>
<td>马雪琪</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td>5人</td>
</tr>
<tr>
<td align="center">视觉</td>
<td>杨思远</td>
<td>陈贤卓</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td>2人</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>战队规划</category>
      </categories>
      <tags>
        <tag>准备RM</tag>
      </tags>
  </entry>
  <entry>
    <title>git加hexo博客</title>
    <url>/2020/04/08/boke/</url>
    <content><![CDATA[<h2 id="搭建自己的博客（一）"><a href="#搭建自己的博客（一）" class="headerlink" title="搭建自己的博客（一）"></a>搭建自己的博客（一）</h2><h3 id="前序："><a href="#前序：" class="headerlink" title="前序："></a><strong>前序：</strong></h3><p>折腾了几天，搞出了<strong>git</strong>加<strong>hexo</strong>的博客（带有评论功能），再次记录一下此次搭建的过程。先看看成品：</p>
<p><a href="https://g-ncp.github.io">https://g-ncp.github.io</a>   （简约风）  推送一篇特制博文配合微信公众号的原文链接使用，可替代微信公众号留言功能，因为我们知道现在注册的公众号都没有留言功能。 （Windows10）  </p>
<p><strong>工具：</strong>电脑   手机</p>
<p>既然是<strong>git</strong>加<strong>hexo</strong>,那么就先来看看<strong>git</strong>和<strong>hexo</strong>是什么。</p>
<blockquote>
<p>Git(读音为/gɪt/。)是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理。Git 是 Linus Torvalds(一个人)为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。</p>
<p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown(可以编辑文本，我感觉挺好用的，博客就是用这个写的)（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
</blockquote>
<p><a href="https://www.typora.io/#windows" target="_blank" rel="noopener">https://www.typora.io/#windows</a>  ←—— 这是我用的md编辑器（我直接贴的Windows下载界面），配合博客编辑使用，也可以自行下载。</p>
<p>还有不推荐把软件都装在C盘，也不是太占C盘，就是如果需要重装系统的话，没有用注册表的话，到时候方便些，软件不用重新下载。</p>
<h3 id="安装git-："><a href="#安装git-：" class="headerlink" title="安装git ："></a>安装git ：</h3><p>首先在电脑上安装git，这里给出官方下载链接,<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">https://git-scm.com/downloads</a>      注意与自己的操作系统匹配。 </p>
<p><img src="https://user-images.githubusercontent.com/49864898/75775522-1d34e880-5d8d-11ea-9df5-486466e84b0f.png" alt=""></p>
<p> 双击安装包</p>
<p><img src="https://user-images.githubusercontent.com/49864898/75775992-1195f180-5d8e-11ea-9d40-22b0291604af.png" alt="">  </p>
<p>出现下图，一路默认配置就可以了，</p>
<p><img src="https://user-images.githubusercontent.com/49864898/75776069-35f1ce00-5d8e-11ea-91b2-05bd9cfae405.png" alt=""></p>
<p>安装完成之后，在桌面右键可以看到Git GUI Here      Git Bash Here             </p>
<p><img src="https://user-images.githubusercontent.com/49864898/75777078-41de8f80-5d90-11ea-8875-0b85b9678d1f.png" alt=""></p>
<p>连接本地与远程，需要 https协议或者ssh密钥。 我记得好像有三种协议，详情可以百度查看GitHub官网。      </p>
<p>下面我们采用ssh密钥的连接方式，首先注册一个GitHub的账户，<a href="https://github.com" target="_blank" rel="noopener">https://github.com</a>    </p>
<p> <img src="https://user-images.githubusercontent.com/49864898/75778155-3e4c0800-5d92-11ea-94d7-5af5045c37c1.png" alt=""></p>
<blockquote>
<p><strong>注册完成后，使用git命令进行如下操作（即右键选择 Git Bash Here）</strong></p>
</blockquote>
<p>​    <img src="https://user-images.githubusercontent.com/49864898/75779661-f7abdd00-5d94-11ea-95c4-d116968bd65a.png" alt=""></p>
<p><strong>1、设置用户名和邮箱</strong><br>在git命令行中对git进行全局设置， <strong>git config –global user.name “用户名”， git config –global user.email 邮箱“</strong>；</p>
<p><img src="https://user-images.githubusercontent.com/49864898/75780049-b36d0c80-5d95-11ea-8b1b-9e36b5d2e940.png" alt=""></p>
<p><strong>2、生成SSH key</strong><br>在git命令行中，输入命令<strong>ssh-keygen -t rsa -C “邮箱地址”</strong>，连续按三个回车；然后根据返回的信息，找到.ssh目录下的两个文件（C盘目录下user文件夹下）；<br><strong>3、在github上添加SSH key</strong><br>在github上点击你的头像，下拉菜单中点击“<strong>setting</strong>”，找到添加SSH key的菜单，然后新增SSH key；把文件id_rsa.pub 里面的内容全部复制到 key编辑框中，标题随意填写，保存完毕；<br><strong>4、检查SSH key是否有效</strong><br>在git命令行输入：<strong>ssh -T <a href="mailto:git@github.com">git@github.com</a></strong>；这里会要求你输入SSH key密码，如果刚才生成SSH key时未输入密码，密码就为空；然后看到信息：<br> <strong>Hi 用户名! You’ve successfully authenticated</strong>；说明配置成功；<br>再次查看github密钥<br>登陆到github上查看刚刚输入的SSH key，现在图标的颜色变为绿色，说明密钥配置有效；到这步git已经安装完成。</p>
<h3 id="安装node-js-和部署hexo"><a href="#安装node-js-和部署hexo" class="headerlink" title="安装node.js 和部署hexo"></a><strong>安装node.js 和部署hexo</strong></h3><blockquote>
<p>Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。    (一样的不知所云😵)</p>
</blockquote>
<p><a href="https://nodejs.org/en/" target="_blank" rel="noopener">https://nodejs.org/en/</a>     ←——  正经下载地址。</p>
<p><img src="https://user-images.githubusercontent.com/49864898/75840457-362db000-5e06-11ea-9f13-2a3bb6cbc570.png" alt=""></p>
<p>然后默认配置 ，node.js完成。</p>
<p>下面安装hexo ,这里就方便多了，在合适的位置新建一个文件夹，来存放hexo的文件， 我的文件路径 → D:\hexo </p>
<p>在这个文件夹里鼠标右键，选择  <strong>git bash  here</strong>   在弹出的黑框里输入命令  <strong>npm install -g hexo-cli</strong>  回车  </p>
<p><img src="https://user-images.githubusercontent.com/49864898/75841824-a558d380-5e09-11ea-930a-1cc75c0be9ba.png" alt=""></p>
<p>等待完成，再次输入命令 <strong>hexo init</strong>  回车并等待完成，这个时候我们有了下面这些文件夹，    </p>
<p><img src="https://user-images.githubusercontent.com/49864898/75843129-4301d200-5e0d-11ea-99be-1757541a223e.png" alt=""></p>
<p>安装deploy-git部署命令  ：在命令行输入<strong>npm install hexo-deployer-git –save</strong></p>
<p>熟悉hexo的命令 ：  可以参考<a href="https://www.cnblogs.com/wsmrzx/p/9439448.html" target="_blank" rel="noopener">https://www.cnblogs.com/wsmrzx/p/9439448.html</a>     </p>
<p>下面是常用的命令：</p>
<p><strong>hexo clean</strong>  命令用于清理缓存文件，是一个比较常用的命令</p>
<p><strong>hexo g</strong>    命令用于生成静态文件 这是简写  全称是 <strong>hexo generate</strong>  不过没有必要，简称也是可以的</p>
<p><strong>hexo s</strong>    命令用于启动本地服务器，同样是简称 。 </p>
<p><strong>hexo d</strong>   用于部署网站</p>
<p><strong>hexo new</strong>  新建博文 如 hexo new “教程”</p>
<p>在命令行输入 hexo clean  回车 结束后 输入 hexo g 回车 结束后 输入 hexo s 回车   等待<del>~</del>  命令行出现网址 <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a>  之后 在浏览器输入这个网址，就可以访问你的博客了。   命令行CTRL + C 退出  。</p>
<h3 id="选择一个主题"><a href="#选择一个主题" class="headerlink" title="选择一个主题"></a><strong>选择一个主题</strong></h3><p>可以发现你的博客很简洁（丑陋），在博客根目录中有 <strong>themes</strong> 文件夹（上图），为了方便添加评论系统，我选择了一个内置了Valine 评论系统的主题，在<a href="https://valine.js.org/hexo.html" target="_blank" rel="noopener">https://valine.js.org/hexo.html</a>    网站里收录了不少这样的主题，建议选择一个经常有人维护的项目。 我选择的是<a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">https://github.com/theme-next/hexo-theme-next</a>  添加主题的方法是进入<strong>themes</strong> 文件夹，（为了简便下面我不在说怎么使用 Git bash here 了 ） 命令行输入<strong>git clone <a href="https://github.com/theme-next/hexo-theme-next.git" target="_blank" rel="noopener">https://github.com/theme-next/hexo-theme-next.git</a></strong> 回车，文件夹内出现 名hexo-theme-next 的文件夹，  回到博客根目录，用记事本或其他方便的应用打开<strong>_config.yml</strong>     找到<strong>theme</strong> 将后面的 landscape 改为 hexo-theme-next （你下载的主题名）  然后 hexo clean  +hexo g+ hexo d +hexo s    查看新主题。  </p>
<p><img src="https://user-images.githubusercontent.com/49864898/75846092-24540900-5e16-11ea-8b2d-2408805850b7.png" alt=""></p>
<h3 id="关联github和hexo"><a href="#关联github和hexo" class="headerlink" title="关联github和hexo"></a><strong>关联github和hexo</strong></h3><p>登录GitHub账户（看不懂就网页翻译），新建一个仓库（点击头像左侧的加号，下拉菜单选择new repository）名字为 <strong>你的用户名加github.io</strong>     选用公共仓库，毕竟我们喜欢白嫖。 <strong>！</strong>下面图片少了一个步骤，<strong>Initialize this repository with a README前面的方框点上对号</strong>    </p>
<p>  <img src="https://user-images.githubusercontent.com/49864898/75847405-0c7e8400-5e1a-11ea-9d24-59d40e24dbfc.png" alt=""></p>
<p>为github选择一个主题： 进入仓库的 Settings  （参考路径h ttps://github.com/你的用户名/你的用户名.github.io/settings）  向下滑动 ，到GitHub Pages 选择 一个主题  随意选择</p>
<p><img src="https://user-images.githubusercontent.com/49864898/75849250-5f0e6f00-5e1f-11ea-9930-e3f23b3bba1e.png" alt=""></p>
<p><img src="https://user-images.githubusercontent.com/49864898/75849322-8b29f000-5e1f-11ea-8dff-0750d76deed6.png" alt=""></p>
<p>接着打开博客配置文件 <strong>_config.yml</strong>   找到 deploy    进行下面的配置（如图）  添上你的GitHub用户名</p>
<p> <img src="https://user-images.githubusercontent.com/49864898/75850358-15735380-5e22-11ea-8df4-d396c0950fd9.png" alt=""></p>
<p>在repository 后面添加库链接就可以了    有的教程是加  git@github.……     这是两种协议，使用ssh协议，将公钥放到GitHub上，私钥留在电脑里，每次push会自动对比公钥私钥，免密使用。</p>
<p>我使用http协议是因为我遇到了一些问题</p>
<p><strong>最后   hexo clean   hexo g    hexo d      三件套</strong>  浏览器访问https://用户名.github.io   .**</p>
]]></content>
      <categories>
        <category>hexo github 博客</category>
      </categories>
      <tags>
        <tag>博客搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/04/07/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
</search>
